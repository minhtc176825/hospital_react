{"version":3,"sources":["config.js","Hospital.js","App.js","serviceWorker.js","index.js"],"names":["HOSPITAL_ABI","Hospital","this","props","doctors","map","doctor","index","id","name","birth","gender","key","patients","patient","insuranceCode","medicRecord","striped","bordered","hover","className","style","width","scope","renderDoctorData","renderPatientData","Form","Group","controlId","Label","fontWeight","Control","placeholder","Text","Button","variant","type","showDoctorForm","Component","App","state","account","doctorsCount","patientsCount","loading","loadBlockchainData","web3","Web3","givenProvider","eth","getAccounts","accounts","setState","hospital","Contract","methods","call","i","href","target","active","role","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6e671677.chunk.js","sourcesContent":["export const HOSPITAL_ADDRESS = \"0x81Ba27823e58e52E13D77C264D13733F5F57901C\"\r\n\r\nexport const HOSPITAL_ABI = [\r\n    {\r\n      \"inputs\": [],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"name\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"birth\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"gender\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"addDoctorEvent\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"name\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"birth\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"gender\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"insuranceCode\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"string\",\r\n          \"name\": \"medicRecord\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"addPatientEvent\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"id\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"findDoctorEvent\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"doctors\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"id\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"name\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"birth\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"gender\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"doctorsCount\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"insurances\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"patients\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"id\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"name\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"birth\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"gender\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"insuranceCode\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"medicRecord\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": true,\r\n      \"inputs\": [],\r\n      \"name\": \"patientsCount\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_name\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_birth\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_gender\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"addDoctor\",\r\n      \"outputs\": [],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"constant\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_name\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_birth\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_gender\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_insuranceCode\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_medicRecord\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"addPatient\",\r\n      \"outputs\": [],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    }\r\n  ]","import React, { Component } from 'react';\r\nimport {Button,Form} from 'react-bootstrap';\r\n\r\n\r\nclass Hospital extends Component {\r\n\r\n\r\n\r\n  // Render Doctor Data\r\n  renderDoctorData() {\r\n    return this.props.doctors.map((doctor, index) => {\r\n      const { id, name, birth, gender} = doctor\r\n      return (\r\n        <tr key={id}>\r\n          <td>{id}</td>\r\n          <td>{name}</td>\r\n          <td>{birth}</td>\r\n          <td>{gender}</td>\r\n        </tr>\r\n        )\r\n    })\r\n  }\r\n\r\n  /* Render Patient Data */ \r\n  renderPatientData() {\r\n    return this.props.patients.map((patient, index) => {\r\n      const { id, name, birth, gender, insuranceCode, medicRecord} = patient\r\n      return (\r\n        <tr key={id}>\r\n          <td>{id}</td>\r\n          <td>{name}</td>\r\n          <td>{birth}</td>\r\n          <td>{gender}</td>\r\n          <td>{insuranceCode}</td>\r\n          <td>{medicRecord}</td>\r\n        </tr>\r\n        )\r\n    })\r\n  }\r\n\r\n\r\n  showDoctorData() {\r\n    return (\r\n      <div id=\"content\" striped bordered hover>\r\n        <h1 id=\"title\"> Doctor Data </h1>\r\n        <table id=\"doctors\" className=\"table\" style={{width: \"50em\"}}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Birthday</th>\r\n              <th scope=\"col\">Gender</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderDoctorData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showPatientData() {\r\n    return (\r\n      <div id=\"content\" striped bordered hover>\r\n        <h1 id=\"title\"> Patient Data </h1>\r\n        <table id=\"patients\" className=\"table\" style={{width: \"50em\"}}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Birthday</th>\r\n              <th scope=\"col\">Gender</th>\r\n              <th scope=\"col\">Insurance Code</th>\r\n              <th scope=\"col\">Medical Record</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderPatientData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showDoctorForm() {\r\n    return (\r\n      <div id=\"form\" style={{width: \"50em\"}}>\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicId\">\r\n            <Form.Label style={{fontWeight: \"bold\"}}>Doctor ID</Form.Label>\r\n            <Form.Control placeholder=\"You do not need to enter this field.\" />\r\n            <Form.Text className=\"text-muted\">This field will be automatically incremented.</Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicName\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control placeholder=\"Ex : Dao Hong Quan\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicAge\">\r\n            <Form.Label>Date of Birth</Form.Label>\r\n            <Form.Control placeholder=\"Ex : 21/09/1999\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicGender\">\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Control placeholder=\"Male or Female\" />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">Add</Button>\r\n        </Form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.showDoctorForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hospital;\r\n","import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport { HOSPITAL_ABI, HOSPITAL_ADDRESS } from './config';\r\nimport Hospital from './Hospital';\r\nimport {Button} from 'react-bootstrap'\r\n\r\nclass App extends Component {\r\n  componentWillMount() {\r\n    this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\r\n    //const network = await web3.eth.net.getNetworkType()\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    \r\n    const hospital = new web3.eth.Contract(HOSPITAL_ABI, HOSPITAL_ADDRESS)\r\n    this.setState({ hospital })\r\n    \r\n    const doctorsCount = await hospital.methods.doctorsCount().call()\r\n    this.setState({ doctorsCount })\r\n\r\n    const patientsCount = await hospital.methods.patientsCount().call()\r\n    this.setState({ patientsCount })\r\n\r\n    for (var i = 1; i <= doctorsCount; i++) {\r\n      const doctor = await hospital.methods.doctors(i).call()\r\n      this.setState({\r\n        doctors: [...this.state.doctors, doctor]\r\n      })\r\n    }\r\n\r\n    for (var i = 1; i <= patientsCount; i++) {\r\n      const patient = await hospital.methods.patients(i).call()\r\n      this.setState({\r\n        patients: [...this.state.patients, patient]\r\n      })\r\n    }\r\n\r\n    this.setState({ loading: false })\r\n\r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { \r\n      account: '',\r\n      doctorsCount: 0,\r\n      patientsCount: 0,\r\n      doctors: [],\r\n      patients: [],\r\n      loading: true\r\n      }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"http://www.dappuniversity.com/free-download\" target=\"_blank\">Dapp | Hospital Management</a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small><a className=\"nav-link\" href=\"#\"><span id=\"account\"></span></a></small>\r\n            </li>\r\n          </ul>\r\n          <div>\r\n          <Button variant=\"primary\" active>Change to patient</Button>\r\n          <Button variant=\"secondary\" active>Sign out</Button>\r\n          </div>\r\n        </nav>\r\n        <hr />\r\n        <br />\r\n        \r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\r\n\r\n              { this.state.loading \r\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>  \r\n                : <Hospital doctors={ this.state.doctors }/>}\r\n\r\n\r\n              \r\n\r\n            </main>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-center\">Your account : {this.state.account}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}